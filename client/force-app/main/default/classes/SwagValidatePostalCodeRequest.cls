/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Request to Validate a Postal Code
 */
public class SwagValidatePostalCodeRequest implements Swagger.MappedProperties {
    /**
     * Optional (recommended); Zip code or postal code of the address to validate, such as \'94597\'
     * @return postalCode
     */
    public String postalCode { get; set; }

    /**
     * Optional (recommended); Name of the country, such as \'United States\'.  If left blank, and CountryCode is also left blank, will default to United States.  Global countries are supported.
     * @return countryFullName
     */
    public String countryFullName { get; set; }

    /**
     * Optional; two-letter country code (Two-letter ISO 3166-1 country code) of the country.  If left blank, and CountryFullName is also left blank, will default to United States.  Global countries are supported.
     * @return countryCode
     */
    public String countryCode { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'PostalCode' => 'postalCode',
        'CountryFullName' => 'countryFullName',
        'CountryCode' => 'countryCode'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagValidatePostalCodeRequest getExample() {
        SwagValidatePostalCodeRequest validatePostalCodeRequest = new SwagValidatePostalCodeRequest();
        validatePostalCodeRequest.postalCode = 'aeiou';
        validatePostalCodeRequest.countryFullName = 'aeiou';
        validatePostalCodeRequest.countryCode = 'aeiou';
        return validatePostalCodeRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagValidatePostalCodeRequest) {
            SwagValidatePostalCodeRequest validatePostalCodeRequest = (SwagValidatePostalCodeRequest) obj;
            return this.postalCode == validatePostalCodeRequest.postalCode
                && this.countryFullName == validatePostalCodeRequest.countryFullName
                && this.countryCode == validatePostalCodeRequest.countryCode;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (postalCode == null ? 0 : System.hashCode(postalCode));
        hashCode = (17 * hashCode) + (countryFullName == null ? 0 : System.hashCode(countryFullName));
        hashCode = (17 * hashCode) + (countryCode == null ? 0 : System.hashCode(countryCode));
        return hashCode;
    }
}

