/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * The result of a User-Agent validation request
 */
public class SwagUserAgentValidateResponse implements Swagger.MappedProperties {
    /**
     * True if the operation was successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * True if the request is a known robot, false otherwise
     * @return isBot
     */
    public Boolean isBot { get; set; }

    /**
     * Optional; name of the robot if the request was from a known robot, otherwise null
     * @return botName
     */
    public String botName { get; set; }

    /**
     * Optional; if available, the URL to the robot
     * @return botURL
     */
    public String botURL { get; set; }

    /**
     * Operating System of the User-Agent (e.g. Windows)
     * @return operatingSystem
     */
    public String operatingSystem { get; set; }

    /**
     * The CPU platform of the User-Agent (e.g. x64)
     * @return operatingSystemCPUPlatform
     */
    public String operatingSystemCPUPlatform { get; set; }

    /**
     * The version of the operating system of the User-Agent (e.g. "10" for Windows 10)
     * @return operatingSystemVersion
     */
    public String operatingSystemVersion { get; set; }

    /**
     * Device type of the User-Agent; possible values are "DESKTOP", "SMARTPHONE", "TABLET"
     * @return deviceType
     */
    public String deviceType { get; set; }

    /**
     * Brand name of the User-Agent
     * @return deviceBrandName
     */
    public String deviceBrandName { get; set; }

    /**
     * Model name or number of the User-Agent
     * @return deviceModel
     */
    public String deviceModel { get; set; }

    /**
     * Name of the Browser
     * @return browserName
     */
    public String browserName { get; set; }

    /**
     * Version of the Browser
     * @return browserVersion
     */
    public String browserVersion { get; set; }

    /**
     * Name of the Browser Engine
     * @return browserEngineName
     */
    public String browserEngineName { get; set; }

    /**
     * Version of the Browser Engine
     * @return browserEngineVersion
     */
    public String browserEngineVersion { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'IsBot' => 'isBot',
        'BotName' => 'botName',
        'BotURL' => 'botURL',
        'OperatingSystem' => 'operatingSystem',
        'OperatingSystemCPUPlatform' => 'operatingSystemCPUPlatform',
        'OperatingSystemVersion' => 'operatingSystemVersion',
        'DeviceType' => 'deviceType',
        'DeviceBrandName' => 'deviceBrandName',
        'DeviceModel' => 'deviceModel',
        'BrowserName' => 'browserName',
        'BrowserVersion' => 'browserVersion',
        'BrowserEngineName' => 'browserEngineName',
        'BrowserEngineVersion' => 'browserEngineVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagUserAgentValidateResponse getExample() {
        SwagUserAgentValidateResponse userAgentValidateResponse = new SwagUserAgentValidateResponse();
        userAgentValidateResponse.successful = true;
        userAgentValidateResponse.isBot = true;
        userAgentValidateResponse.botName = 'aeiou';
        userAgentValidateResponse.botURL = 'aeiou';
        userAgentValidateResponse.operatingSystem = 'aeiou';
        userAgentValidateResponse.operatingSystemCPUPlatform = 'aeiou';
        userAgentValidateResponse.operatingSystemVersion = 'aeiou';
        userAgentValidateResponse.deviceType = 'aeiou';
        userAgentValidateResponse.deviceBrandName = 'aeiou';
        userAgentValidateResponse.deviceModel = 'aeiou';
        userAgentValidateResponse.browserName = 'aeiou';
        userAgentValidateResponse.browserVersion = 'aeiou';
        userAgentValidateResponse.browserEngineName = 'aeiou';
        userAgentValidateResponse.browserEngineVersion = 'aeiou';
        return userAgentValidateResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagUserAgentValidateResponse) {
            SwagUserAgentValidateResponse userAgentValidateResponse = (SwagUserAgentValidateResponse) obj;
            return this.successful == userAgentValidateResponse.successful
                && this.isBot == userAgentValidateResponse.isBot
                && this.botName == userAgentValidateResponse.botName
                && this.botURL == userAgentValidateResponse.botURL
                && this.operatingSystem == userAgentValidateResponse.operatingSystem
                && this.operatingSystemCPUPlatform == userAgentValidateResponse.operatingSystemCPUPlatform
                && this.operatingSystemVersion == userAgentValidateResponse.operatingSystemVersion
                && this.deviceType == userAgentValidateResponse.deviceType
                && this.deviceBrandName == userAgentValidateResponse.deviceBrandName
                && this.deviceModel == userAgentValidateResponse.deviceModel
                && this.browserName == userAgentValidateResponse.browserName
                && this.browserVersion == userAgentValidateResponse.browserVersion
                && this.browserEngineName == userAgentValidateResponse.browserEngineName
                && this.browserEngineVersion == userAgentValidateResponse.browserEngineVersion;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (isBot == null ? 0 : System.hashCode(isBot));
        hashCode = (17 * hashCode) + (botName == null ? 0 : System.hashCode(botName));
        hashCode = (17 * hashCode) + (botURL == null ? 0 : System.hashCode(botURL));
        hashCode = (17 * hashCode) + (operatingSystem == null ? 0 : System.hashCode(operatingSystem));
        hashCode = (17 * hashCode) + (operatingSystemCPUPlatform == null ? 0 : System.hashCode(operatingSystemCPUPlatform));
        hashCode = (17 * hashCode) + (operatingSystemVersion == null ? 0 : System.hashCode(operatingSystemVersion));
        hashCode = (17 * hashCode) + (deviceType == null ? 0 : System.hashCode(deviceType));
        hashCode = (17 * hashCode) + (deviceBrandName == null ? 0 : System.hashCode(deviceBrandName));
        hashCode = (17 * hashCode) + (deviceModel == null ? 0 : System.hashCode(deviceModel));
        hashCode = (17 * hashCode) + (browserName == null ? 0 : System.hashCode(browserName));
        hashCode = (17 * hashCode) + (browserVersion == null ? 0 : System.hashCode(browserVersion));
        hashCode = (17 * hashCode) + (browserEngineName == null ? 0 : System.hashCode(browserEngineName));
        hashCode = (17 * hashCode) + (browserEngineVersion == null ? 0 : System.hashCode(browserEngineVersion));
        return hashCode;
    }
}

