/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result from validating a phone number
 */
public class SwagPhoneNumberValidationResponse implements Swagger.MappedProperties {
    /**
     * True if the phone number is valid, false otherwise
     * @return isValid
     */
    public Boolean isValid { get; set; }

    /**
     * True if the operation was successful, false if there was an error during validation.  See IsValid for validation result.
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Type of phone number; possible values are: FixedLine, Mobile, FixedLineOrMobile, TollFree, PremiumRate, \r\nSharedCost, Voip, PersonalNumber, Pager, Uan, Voicemail, Unknown
     * @return phoneNumberType
     */
    public String phoneNumberType { get; set; }

    /**
     * E.164 format of the phone number
     * @return e164Format
     */
    public String e164Format { get; set; }

    /**
     * Internaltional format of the phone number
     * @return internationalFormat
     */
    public String internationalFormat { get; set; }

    /**
     * National format of the phone number
     * @return nationalFormat
     */
    public String nationalFormat { get; set; }

    /**
     * Two digit country code of the phone number
     * @return countryCode
     */
    public String countryCode { get; set; }

    /**
     * User-friendly long name of the country for the phone number
     * @return countryName
     */
    public String countryName { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'IsValid' => 'isValid',
        'Successful' => 'successful',
        'PhoneNumberType' => 'phoneNumberType',
        'E164Format' => 'e164Format',
        'InternationalFormat' => 'internationalFormat',
        'NationalFormat' => 'nationalFormat',
        'CountryCode' => 'countryCode',
        'CountryName' => 'countryName'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagPhoneNumberValidationResponse getExample() {
        SwagPhoneNumberValidationResponse phoneNumberValidationResponse = new SwagPhoneNumberValidationResponse();
        phoneNumberValidationResponse.isValid = true;
        phoneNumberValidationResponse.successful = true;
        phoneNumberValidationResponse.phoneNumberType = 'aeiou';
        phoneNumberValidationResponse.e164Format = 'aeiou';
        phoneNumberValidationResponse.internationalFormat = 'aeiou';
        phoneNumberValidationResponse.nationalFormat = 'aeiou';
        phoneNumberValidationResponse.countryCode = 'aeiou';
        phoneNumberValidationResponse.countryName = 'aeiou';
        return phoneNumberValidationResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagPhoneNumberValidationResponse) {
            SwagPhoneNumberValidationResponse phoneNumberValidationResponse = (SwagPhoneNumberValidationResponse) obj;
            return this.isValid == phoneNumberValidationResponse.isValid
                && this.successful == phoneNumberValidationResponse.successful
                && this.phoneNumberType == phoneNumberValidationResponse.phoneNumberType
                && this.e164Format == phoneNumberValidationResponse.e164Format
                && this.internationalFormat == phoneNumberValidationResponse.internationalFormat
                && this.nationalFormat == phoneNumberValidationResponse.nationalFormat
                && this.countryCode == phoneNumberValidationResponse.countryCode
                && this.countryName == phoneNumberValidationResponse.countryName;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (isValid == null ? 0 : System.hashCode(isValid));
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (phoneNumberType == null ? 0 : System.hashCode(phoneNumberType));
        hashCode = (17 * hashCode) + (e164Format == null ? 0 : System.hashCode(e164Format));
        hashCode = (17 * hashCode) + (internationalFormat == null ? 0 : System.hashCode(internationalFormat));
        hashCode = (17 * hashCode) + (nationalFormat == null ? 0 : System.hashCode(nationalFormat));
        hashCode = (17 * hashCode) + (countryCode == null ? 0 : System.hashCode(countryCode));
        hashCode = (17 * hashCode) + (countryName == null ? 0 : System.hashCode(countryName));
        return hashCode;
    }
}

