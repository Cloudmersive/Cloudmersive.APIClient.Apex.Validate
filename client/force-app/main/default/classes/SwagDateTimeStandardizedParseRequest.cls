/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Input parameter to a date time parsing request
 */
public class SwagDateTimeStandardizedParseRequest implements Swagger.MappedProperties {
    /**
     * Raw string input of a standard-formatted date and time for parsing
     * @return rawDateTimeInput
     */
    public String rawDateTimeInput { get; set; }

    /**
     * Optional: specify the two-letter country code to optimzie date formatting; default is US
     * @return countryCode
     */
    public String countryCode { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'RawDateTimeInput' => 'rawDateTimeInput',
        'CountryCode' => 'countryCode'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagDateTimeStandardizedParseRequest getExample() {
        SwagDateTimeStandardizedParseRequest dateTimeStandardizedParseRequest = new SwagDateTimeStandardizedParseRequest();
        dateTimeStandardizedParseRequest.rawDateTimeInput = 'aeiou';
        dateTimeStandardizedParseRequest.countryCode = 'aeiou';
        return dateTimeStandardizedParseRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagDateTimeStandardizedParseRequest) {
            SwagDateTimeStandardizedParseRequest dateTimeStandardizedParseRequest = (SwagDateTimeStandardizedParseRequest) obj;
            return this.rawDateTimeInput == dateTimeStandardizedParseRequest.rawDateTimeInput
                && this.countryCode == dateTimeStandardizedParseRequest.countryCode;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (rawDateTimeInput == null ? 0 : System.hashCode(rawDateTimeInput));
        hashCode = (17 * hashCode) + (countryCode == null ? 0 : System.hashCode(countryCode));
        return hashCode;
    }
}

