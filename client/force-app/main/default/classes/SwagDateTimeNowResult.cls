/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Current date and time response
 */
public class SwagDateTimeNowResult implements Swagger.MappedProperties {
    /**
     * True if successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Current date, time, and time zone in standard JSON date format
     * @return now
     */
    public Datetime now { get; set; }

    /**
     * Current GMT-time-zone date, time, and time zone in standard JSON date format
     * @return nowGmt
     */
    public Datetime nowGmt { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'Now' => 'now',
        'NowGmt' => 'nowGmt'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagDateTimeNowResult getExample() {
        SwagDateTimeNowResult dateTimeNowResult = new SwagDateTimeNowResult();
        dateTimeNowResult.successful = true;
        dateTimeNowResult.now = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
        dateTimeNowResult.nowGmt = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
        return dateTimeNowResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagDateTimeNowResult) {
            SwagDateTimeNowResult dateTimeNowResult = (SwagDateTimeNowResult) obj;
            return this.successful == dateTimeNowResult.successful
                && this.now == dateTimeNowResult.now
                && this.nowGmt == dateTimeNowResult.nowGmt;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (now == null ? 0 : System.hashCode(now));
        hashCode = (17 * hashCode) + (nowGmt == null ? 0 : System.hashCode(nowGmt));
        return hashCode;
    }
}

