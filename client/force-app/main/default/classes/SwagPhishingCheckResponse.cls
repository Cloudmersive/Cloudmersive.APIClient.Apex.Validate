/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of checking a URL for Phishing threats
 */
public class SwagPhishingCheckResponse implements Swagger.MappedProperties {
    /**
     * True if the URL is clean, false if it is at risk of containing a Phishing threat or attack
     * @return cleanURL
     */
    public Boolean cleanURL { get; set; }

    /**
     * Threat type of the Phishing threat; possible values are VerifiedPhishingURL, UnverifiedPhishingURL, or VerifiedPhishingDomain
     * @return threatType
     */
    public String threatType { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'CleanURL' => 'cleanURL',
        'ThreatType' => 'threatType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagPhishingCheckResponse getExample() {
        SwagPhishingCheckResponse phishingCheckResponse = new SwagPhishingCheckResponse();
        phishingCheckResponse.cleanURL = true;
        phishingCheckResponse.threatType = 'aeiou';
        return phishingCheckResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagPhishingCheckResponse) {
            SwagPhishingCheckResponse phishingCheckResponse = (SwagPhishingCheckResponse) obj;
            return this.cleanURL == phishingCheckResponse.cleanURL
                && this.threatType == phishingCheckResponse.threatType;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (cleanURL == null ? 0 : System.hashCode(cleanURL));
        hashCode = (17 * hashCode) + (threatType == null ? 0 : System.hashCode(threatType));
        return hashCode;
    }
}

