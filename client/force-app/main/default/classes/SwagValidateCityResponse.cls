/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of validating a city
 */
public class SwagValidateCityResponse implements Swagger.MappedProperties {
    /**
     * True if the city is valid, false otherwise
     * @return validCity
     */
    public Boolean validCity { get; set; }

    /**
     * If valid, City corresponding to the input postal code, such as \'Walnut Creek\'
     * @return city
     */
    public String city { get; set; }

    /**
     * If valid; State or province corresponding to the input state name, such as \'CA\' or \'California\'
     * @return stateOrProvince
     */
    public String stateOrProvince { get; set; }

    /**
     * If the postal code is valid, the degrees latitude of the centroid of the state, null otherwise
     * @return latitude
     */
    public Double latitude { get; set; }

    /**
     * If the postal code is valid, the degrees longitude of the centroid of the state, null otherwise
     * @return longitude
     */
    public Double longitude { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ValidCity' => 'validCity',
        'City' => 'city',
        'StateOrProvince' => 'stateOrProvince',
        'Latitude' => 'latitude',
        'Longitude' => 'longitude'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagValidateCityResponse getExample() {
        SwagValidateCityResponse validateCityResponse = new SwagValidateCityResponse();
        validateCityResponse.validCity = true;
        validateCityResponse.city = 'aeiou';
        validateCityResponse.stateOrProvince = 'aeiou';
        validateCityResponse.latitude = 1.3579;
        validateCityResponse.longitude = 1.3579;
        return validateCityResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagValidateCityResponse) {
            SwagValidateCityResponse validateCityResponse = (SwagValidateCityResponse) obj;
            return this.validCity == validateCityResponse.validCity
                && this.city == validateCityResponse.city
                && this.stateOrProvince == validateCityResponse.stateOrProvince
                && this.latitude == validateCityResponse.latitude
                && this.longitude == validateCityResponse.longitude;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (validCity == null ? 0 : System.hashCode(validCity));
        hashCode = (17 * hashCode) + (city == null ? 0 : System.hashCode(city));
        hashCode = (17 * hashCode) + (stateOrProvince == null ? 0 : System.hashCode(stateOrProvince));
        hashCode = (17 * hashCode) + (latitude == null ? 0 : System.hashCode(latitude));
        hashCode = (17 * hashCode) + (longitude == null ? 0 : System.hashCode(longitude));
        return hashCode;
    }
}

