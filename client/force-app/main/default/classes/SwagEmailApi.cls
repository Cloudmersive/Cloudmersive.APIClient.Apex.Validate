/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagEmailApi {
    SwagClient client;

    public SwagEmailApi(SwagClient client) {
        this.client = client;
    }

    public SwagEmailApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Partially check whether an email address is valid
     * Validate an email address by identifying whether its parent domain has email servers defined.  This call is less limited than syntaxOnly but not as comprehensive as address/full.
     * @param email Email address to validate, e.g. &quot;support@cloudmersive.com&quot;.    The input is a string so be sure to enclose it in double-quotes. (required)
     * @return SwagAddressGetServersResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagAddressGetServersResponse emailAddressGetServers(Map<String, Object> params) {
        client.assertNotNull(params.get('email'), 'email');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagAddressGetServersResponse) client.invoke(
            'POST', '/validate/email/address/servers',
            (String) params.get('email'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagAddressGetServersResponse.class
        );
    }
    /**
     * Fully validate an email address
     * Performs a full validation of the email address.  Checks for syntactic correctness, identifies the mail server in question if any, and then contacts the email server to validate the existence of the account - without sending any emails.
     * @param email Email address to validate, e.g. &quot;support@cloudmersive.com&quot;.    The input is a string so be sure to enclose it in double-quotes. (required)
     * @return SwagFullEmailValidationResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagFullEmailValidationResponse emailFullValidation(Map<String, Object> params) {
        client.assertNotNull(params.get('email'), 'email');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagFullEmailValidationResponse) client.invoke(
            'POST', '/validate/email/address/full',
            (String) params.get('email'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagFullEmailValidationResponse.class
        );
    }
    /**
     * Validate email adddress for syntactic correctness only
     * Validate whether a given email address is syntactically correct via a limited local-only check.  Use the address/full API to do a full validation.
     * @param value Email address to validate, e.g. &quot;support@cloudmersive.com&quot;.    The input is a string so be sure to enclose it in double-quotes. (required)
     * @return SwagAddressVerifySyntaxOnlyResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagAddressVerifySyntaxOnlyResponse emailPost(Map<String, Object> params) {
        client.assertNotNull(params.get('value'), 'value');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagAddressVerifySyntaxOnlyResponse) client.invoke(
            'POST', '/validate/email/address/syntaxOnly',
            (String) params.get('value'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagAddressVerifySyntaxOnlyResponse.class
        );
    }
}
