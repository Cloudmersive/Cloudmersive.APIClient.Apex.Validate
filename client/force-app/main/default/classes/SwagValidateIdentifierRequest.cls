/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Identifier validation request, including the input identifier as well as various identifier rules
 */
public class SwagValidateIdentifierRequest implements Swagger.MappedProperties {
    /**
     * Text string identifier input
     * @return input
     */
    public String input { get; set; }

    /**
     * True if whitespace is allowed in the identifier, false otherwise
     * @return allowWhitespace
     */
    public Boolean allowWhitespace { get; set; }

    /**
     * True if hyphens are allowd in the identifier, false otherwise
     * @return allowHyphens
     */
    public Boolean allowHyphens { get; set; }

    /**
     * True if underscores are allowed in the identifier, false otherwise
     * @return allowUnderscore
     */
    public Boolean allowUnderscore { get; set; }

    /**
     * True if numbers are allowed in the identifier, false otherwise
     * @return allowNumbers
     */
    public Boolean allowNumbers { get; set; }

    /**
     * True if periods are allowed in the identifier, false otherwise
     * @return allowPeriods
     */
    public Boolean allowPeriods { get; set; }

    /**
     * Optional; maximum length, if any, of the identifier
     * @return maxLength
     */
    public Integer maxLength { get; set; }

    /**
     * Optional; minimum length, if any, of the identifier
     * @return minLength
     */
    public Integer minLength { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Input' => 'input',
        'AllowWhitespace' => 'allowWhitespace',
        'AllowHyphens' => 'allowHyphens',
        'AllowUnderscore' => 'allowUnderscore',
        'AllowNumbers' => 'allowNumbers',
        'AllowPeriods' => 'allowPeriods',
        'MaxLength' => 'maxLength',
        'MinLength' => 'minLength'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagValidateIdentifierRequest getExample() {
        SwagValidateIdentifierRequest validateIdentifierRequest = new SwagValidateIdentifierRequest();
        validateIdentifierRequest.input = 'aeiou';
        validateIdentifierRequest.allowWhitespace = true;
        validateIdentifierRequest.allowHyphens = true;
        validateIdentifierRequest.allowUnderscore = true;
        validateIdentifierRequest.allowNumbers = true;
        validateIdentifierRequest.allowPeriods = true;
        validateIdentifierRequest.maxLength = 123;
        validateIdentifierRequest.minLength = 123;
        return validateIdentifierRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagValidateIdentifierRequest) {
            SwagValidateIdentifierRequest validateIdentifierRequest = (SwagValidateIdentifierRequest) obj;
            return this.input == validateIdentifierRequest.input
                && this.allowWhitespace == validateIdentifierRequest.allowWhitespace
                && this.allowHyphens == validateIdentifierRequest.allowHyphens
                && this.allowUnderscore == validateIdentifierRequest.allowUnderscore
                && this.allowNumbers == validateIdentifierRequest.allowNumbers
                && this.allowPeriods == validateIdentifierRequest.allowPeriods
                && this.maxLength == validateIdentifierRequest.maxLength
                && this.minLength == validateIdentifierRequest.minLength;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (input == null ? 0 : System.hashCode(input));
        hashCode = (17 * hashCode) + (allowWhitespace == null ? 0 : System.hashCode(allowWhitespace));
        hashCode = (17 * hashCode) + (allowHyphens == null ? 0 : System.hashCode(allowHyphens));
        hashCode = (17 * hashCode) + (allowUnderscore == null ? 0 : System.hashCode(allowUnderscore));
        hashCode = (17 * hashCode) + (allowNumbers == null ? 0 : System.hashCode(allowNumbers));
        hashCode = (17 * hashCode) + (allowPeriods == null ? 0 : System.hashCode(allowPeriods));
        hashCode = (17 * hashCode) + (maxLength == null ? 0 : System.hashCode(maxLength));
        hashCode = (17 * hashCode) + (minLength == null ? 0 : System.hashCode(minLength));
        return hashCode;
    }
}

