/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of performing a country validation operation
 */
public class SwagValidateCountryResponse implements Swagger.MappedProperties {
    /**
     * True if successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Full name of the country
     * @return countryFullName
     */
    public String countryFullName { get; set; }

    /**
     * Two-letter ISO 3166-1 country code
     * @return isOTwoLetterCode
     */
    public String isOTwoLetterCode { get; set; }

    /**
     * Two-letter FIPS 10-4 country code
     * @return fiPSTwoLetterCode
     */
    public String fiPSTwoLetterCode { get; set; }

    /**
     * Three-letter ISO 3166-1 country code
     * @return threeLetterCode
     */
    public String threeLetterCode { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'CountryFullName' => 'countryFullName',
        'ISOTwoLetterCode' => 'isOTwoLetterCode',
        'FIPSTwoLetterCode' => 'fiPSTwoLetterCode',
        'ThreeLetterCode' => 'threeLetterCode'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagValidateCountryResponse getExample() {
        SwagValidateCountryResponse validateCountryResponse = new SwagValidateCountryResponse();
        validateCountryResponse.successful = true;
        validateCountryResponse.countryFullName = 'aeiou';
        validateCountryResponse.isOTwoLetterCode = 'aeiou';
        validateCountryResponse.fiPSTwoLetterCode = 'aeiou';
        validateCountryResponse.threeLetterCode = 'aeiou';
        return validateCountryResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagValidateCountryResponse) {
            SwagValidateCountryResponse validateCountryResponse = (SwagValidateCountryResponse) obj;
            return this.successful == validateCountryResponse.successful
                && this.countryFullName == validateCountryResponse.countryFullName
                && this.isOTwoLetterCode == validateCountryResponse.isOTwoLetterCode
                && this.fiPSTwoLetterCode == validateCountryResponse.fiPSTwoLetterCode
                && this.threeLetterCode == validateCountryResponse.threeLetterCode;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (countryFullName == null ? 0 : System.hashCode(countryFullName));
        hashCode = (17 * hashCode) + (isOTwoLetterCode == null ? 0 : System.hashCode(isOTwoLetterCode));
        hashCode = (17 * hashCode) + (fiPSTwoLetterCode == null ? 0 : System.hashCode(fiPSTwoLetterCode));
        hashCode = (17 * hashCode) + (threeLetterCode == null ? 0 : System.hashCode(threeLetterCode));
        return hashCode;
    }
}

