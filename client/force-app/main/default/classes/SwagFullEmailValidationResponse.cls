/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Full email addresss validation result
 */
public class SwagFullEmailValidationResponse implements Swagger.MappedProperties {
    /**
     * True if the email address is valid, false otherwise
     * @return validAddress
     */
    public Boolean validAddress { get; set; }

    /**
     * Email server connected to for verification
     * @return mailServerUsedForValidation
     */
    public String mailServerUsedForValidation { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ValidAddress' => 'validAddress',
        'MailServerUsedForValidation' => 'mailServerUsedForValidation'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagFullEmailValidationResponse getExample() {
        SwagFullEmailValidationResponse fullEmailValidationResponse = new SwagFullEmailValidationResponse();
        fullEmailValidationResponse.validAddress = true;
        fullEmailValidationResponse.mailServerUsedForValidation = 'aeiou';
        return fullEmailValidationResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagFullEmailValidationResponse) {
            SwagFullEmailValidationResponse fullEmailValidationResponse = (SwagFullEmailValidationResponse) obj;
            return this.validAddress == fullEmailValidationResponse.validAddress
                && this.mailServerUsedForValidation == fullEmailValidationResponse.mailServerUsedForValidation;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (validAddress == null ? 0 : System.hashCode(validAddress));
        hashCode = (17 * hashCode) + (mailServerUsedForValidation == null ? 0 : System.hashCode(mailServerUsedForValidation));
        return hashCode;
    }
}

