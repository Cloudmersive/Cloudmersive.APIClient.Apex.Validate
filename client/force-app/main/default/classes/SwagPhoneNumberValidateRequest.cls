/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Request to validate a phone number
 */
public class SwagPhoneNumberValidateRequest implements Swagger.MappedProperties {
    /**
     * Raw phone number string to parse as input for validation
     * @return phoneNumber
     */
    public String phoneNumber { get; set; }

    /**
     * Optional, default country code.  If left blank, will default to "US".
     * @return defaultCountryCode
     */
    public String defaultCountryCode { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'PhoneNumber' => 'phoneNumber',
        'DefaultCountryCode' => 'defaultCountryCode'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagPhoneNumberValidateRequest getExample() {
        SwagPhoneNumberValidateRequest phoneNumberValidateRequest = new SwagPhoneNumberValidateRequest();
        phoneNumberValidateRequest.phoneNumber = 'aeiou';
        phoneNumberValidateRequest.defaultCountryCode = 'aeiou';
        return phoneNumberValidateRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagPhoneNumberValidateRequest) {
            SwagPhoneNumberValidateRequest phoneNumberValidateRequest = (SwagPhoneNumberValidateRequest) obj;
            return this.phoneNumber == phoneNumberValidateRequest.phoneNumber
                && this.defaultCountryCode == phoneNumberValidateRequest.defaultCountryCode;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (phoneNumber == null ? 0 : System.hashCode(phoneNumber));
        hashCode = (17 * hashCode) + (defaultCountryCode == null ? 0 : System.hashCode(defaultCountryCode));
        return hashCode;
    }
}

