/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagNameApi {
    SwagClient client;

    public SwagNameApi(SwagClient client) {
        this.client = client;
    }

    public SwagNameApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Get the gender of a first name
     * Determines the gender of a first name (given name)
     * @param input Gender request information (required)
     * @return SwagGetGenderResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagGetGenderResponse nameGetGender(Map<String, Object> params) {
        client.assertNotNull(params.get('input'), 'input');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagGetGenderResponse) client.invoke(
            'POST', '/validate/name/get-gender',
            (SwagGetGenderRequest) params.get('input'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagGetGenderResponse.class
        );
    }
    /**
     * Validate a first name
     * Determines if a string is a valid first name (given name)
     * @param input Validation request information (required)
     * @return SwagFirstNameValidationResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagFirstNameValidationResponse nameValidateFirstName(Map<String, Object> params) {
        client.assertNotNull(params.get('input'), 'input');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagFirstNameValidationResponse) client.invoke(
            'POST', '/validate/name/first',
            (SwagFirstNameValidationRequest) params.get('input'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagFirstNameValidationResponse.class
        );
    }
    /**
     * Parse and validate a full name
     * Parses a full name string (e.g. &quot;Mr. Jon van der Waal Jr.&quot;) into its component parts (and returns these component parts), and then validates whether it is a valid name string or not
     * @param input Validation request information (required)
     * @return SwagFullNameValidationResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagFullNameValidationResponse nameValidateFullName(Map<String, Object> params) {
        client.assertNotNull(params.get('input'), 'input');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagFullNameValidationResponse) client.invoke(
            'POST', '/validate/name/full-name',
            (SwagFullNameValidationRequest) params.get('input'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagFullNameValidationResponse.class
        );
    }
    /**
     * Validate a last name
     * Determines if a string is a valid last name (surname)
     * @param input Validation request information (required)
     * @return SwagLastNameValidationResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagLastNameValidationResponse nameValidateLastName(Map<String, Object> params) {
        client.assertNotNull(params.get('input'), 'input');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagLastNameValidationResponse) client.invoke(
            'POST', '/validate/name/last',
            (SwagLastNameValidationRequest) params.get('input'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagLastNameValidationResponse.class
        );
    }
}
