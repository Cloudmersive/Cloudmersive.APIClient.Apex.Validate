/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Syntactic validity of email address
 */
public class SwagAddressVerifySyntaxOnlyResponse implements Swagger.MappedProperties {
    /**
     * True if the email address is syntactically valid, false if it is not
     * @return validAddress
     */
    public Boolean validAddress { get; set; }

    /**
     * Domain name of the email address
     * @return domain
     */
    public String domain { get; set; }

    /**
     * True if the email domain name is a free provider (typically a free to sign up web email provider for consumers / personal use), false otherwise.
     * @return isFreeEmailProvider
     */
    public Boolean isFreeEmailProvider { get; set; }

    /**
     * True if the email address is a disposable email address, false otherwise; these disposable providers are not typically used to receive email and so will have a low likelihood of opening mail sent there.
     * @return isDisposable
     */
    public Boolean isDisposable { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ValidAddress' => 'validAddress',
        'Domain' => 'domain',
        'IsFreeEmailProvider' => 'isFreeEmailProvider',
        'IsDisposable' => 'isDisposable'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagAddressVerifySyntaxOnlyResponse getExample() {
        SwagAddressVerifySyntaxOnlyResponse addressVerifySyntaxOnlyResponse = new SwagAddressVerifySyntaxOnlyResponse();
        addressVerifySyntaxOnlyResponse.validAddress = true;
        addressVerifySyntaxOnlyResponse.domain = 'aeiou';
        addressVerifySyntaxOnlyResponse.isFreeEmailProvider = true;
        addressVerifySyntaxOnlyResponse.isDisposable = true;
        return addressVerifySyntaxOnlyResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagAddressVerifySyntaxOnlyResponse) {
            SwagAddressVerifySyntaxOnlyResponse addressVerifySyntaxOnlyResponse = (SwagAddressVerifySyntaxOnlyResponse) obj;
            return this.validAddress == addressVerifySyntaxOnlyResponse.validAddress
                && this.domain == addressVerifySyntaxOnlyResponse.domain
                && this.isFreeEmailProvider == addressVerifySyntaxOnlyResponse.isFreeEmailProvider
                && this.isDisposable == addressVerifySyntaxOnlyResponse.isDisposable;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (validAddress == null ? 0 : System.hashCode(validAddress));
        hashCode = (17 * hashCode) + (domain == null ? 0 : System.hashCode(domain));
        hashCode = (17 * hashCode) + (isFreeEmailProvider == null ? 0 : System.hashCode(isFreeEmailProvider));
        hashCode = (17 * hashCode) + (isDisposable == null ? 0 : System.hashCode(isDisposable));
        return hashCode;
    }
}

