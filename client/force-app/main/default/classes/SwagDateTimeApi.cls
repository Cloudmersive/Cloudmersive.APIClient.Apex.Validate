/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagDateTimeApi {
    SwagClient client;

    public SwagDateTimeApi(SwagClient client) {
        this.client = client;
    }

    public SwagDateTimeApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Get current date and time as of now
     * Gets the current date and time.  Response time is syncronized with atomic clocks, and represents a monotonic, centrally available, consistent clock.
     * @return SwagDateTimeNowResult
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagDateTimeNowResult dateTimeGetNowSimple() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagDateTimeNowResult) client.invoke(
            'GET', '/validate/date-time/get/now', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagDateTimeNowResult.class
        );
    }
    /**
     * Get public holidays in the specified country and year
     * Enumerates all public holidays in a given country for a given year.  Supports over 100 countries.
     * @param input Input request (required)
     * @return SwagPublicHolidaysResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagPublicHolidaysResponse dateTimeGetPublicHolidays(Map<String, Object> params) {
        client.assertNotNull(params.get('input'), 'input');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagPublicHolidaysResponse) client.invoke(
            'POST', '/validate/date-time/get/holidays',
            (SwagGetPublicHolidaysRequest) params.get('input'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagPublicHolidaysResponse.class
        );
    }
    /**
     * Parses a free-form natural language date and time string into a date and time
     * Parses an unstructured, free-form, natural language date and time string into a date time object.  This is intended for lightweight human-entered input, such as &quot;tomorrow at 3pm&quot; or &quot;tuesday&quot;.
     * @param input Input request (required)
     * @return SwagDateTimeStandardizedParseRespons
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagDateTimeStandardizedParseRespons dateTimeParseNaturalLanguageDateTime(Map<String, Object> params) {
        client.assertNotNull(params.get('input'), 'input');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagDateTimeStandardizedParseRespons) client.invoke(
            'POST', '/validate/date-time/parse/date-time/natural-language',
            (SwagDateTimeNaturalLanguageParseRequ) params.get('input'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagDateTimeStandardizedParseRespons.class
        );
    }
    /**
     * Parses a standardized date and time string into a date and time
     * Parses a structured date and time string into a date time object.  This is intended for standardized date strings that adhere to formatting conventions, rather than natural language input.
     * @param input Input request (required)
     * @return SwagDateTimeStandardizedParseRespons
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagDateTimeStandardizedParseRespons dateTimeParseStandardDateTime(Map<String, Object> params) {
        client.assertNotNull(params.get('input'), 'input');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagDateTimeStandardizedParseRespons) client.invoke(
            'POST', '/validate/date-time/parse/date-time/structured',
            (SwagDateTimeStandardizedParseRequest) params.get('input'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagDateTimeStandardizedParseRespons.class
        );
    }
}
