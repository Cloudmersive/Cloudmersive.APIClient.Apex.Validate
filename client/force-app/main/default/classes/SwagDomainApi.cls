/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagDomainApi {
    SwagClient client;

    public SwagDomainApi(SwagClient client) {
        this.client = client;
    }

    public SwagDomainApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Validate a domain name
     * Check whether a domain name is valid or not.  API performs a live validation by contacting DNS services to validate the existence of the domain name.
     * @param domain Domain name to check, for example &quot;cloudmersive.com&quot;.  The input is a string so be sure to enclose it in double-quotes. (required)
     * @return SwagCheckResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagCheckResponse domainCheck(Map<String, Object> params) {
        client.assertNotNull(params.get('domain'), 'domain');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagCheckResponse) client.invoke(
            'POST', '/validate/domain/check',
            (String) params.get('domain'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagCheckResponse.class
        );
    }
    /**
     * Get WHOIS information for a domain
     * Validate whether a domain name exists, and also return the full WHOIS record for that domain name.  WHOIS records include all the registration details of the domain name, such as information about the domain\&#39;s owners.
     * @param domain Domain name to check, for example &quot;cloudmersive.com&quot;.   The input is a string so be sure to enclose it in double-quotes. (required)
     * @return SwagWhoisResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagWhoisResponse domainPost(Map<String, Object> params) {
        client.assertNotNull(params.get('domain'), 'domain');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagWhoisResponse) client.invoke(
            'POST', '/validate/domain/whois',
            (String) params.get('domain'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagWhoisResponse.class
        );
    }
    /**
     * Validate a URL fully
     * Validate whether a URL is syntactically valid (does not check endpoint for validity), whether it exists, and whether the endpoint is up and passes virus scan checks.  Accepts various types of input and produces a well-formed URL as output.
     * @param request Input URL request (required)
     * @return SwagValidateUrlResponseFull
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagValidateUrlResponseFull domainUrlFull(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagValidateUrlResponseFull) client.invoke(
            'POST', '/validate/domain/url/full',
            (SwagValidateUrlRequestFull) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagValidateUrlResponseFull.class
        );
    }
    /**
     * Validate a URL syntactically
     * Validate whether a URL is syntactically valid (does not check endpoint for validity).  Accepts various types of input and produces a well-formed URL as output.
     * @param request Input URL information (required)
     * @return SwagValidateUrlResponseSyntaxOnly
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagValidateUrlResponseSyntaxOnly domainUrlSyntaxOnly(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagValidateUrlResponseSyntaxOnly) client.invoke(
            'POST', '/validate/domain/url/syntax-only',
            (SwagValidateUrlRequestSyntaxOnly) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagValidateUrlResponseSyntaxOnly.class
        );
    }
}
